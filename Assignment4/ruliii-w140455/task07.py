# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tV5j-DRcpPtoJGoMj8v2DSqR_9wyXeiE

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/resources/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

ns=Namespace("http://somewhere#")
from rdflib.plugins.sparql import prepareQuery
q1=prepareQuery('''
    select 
        ?Subject
    where{
        ?Subject RDFS:subClassOf <http://somewhere#Person>
    }
''',
initNs={"RDFS":RDFS}
)
for r in g.query(q1):
    print("SPARQL: ", r)

for t in g.triples((None, RDFS.subClassOf, ns.Person)):
    print("RDFLib:", t)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**"""

q2=prepareQuery('''
    select 
        ?Subject
    where{
        {?Subject RDFS:subClassOf <http://somewhere#Person>} union
        {?Subject RDF:type <http://somewhere#Person>}
    }
''',
initNs={"RDFS":RDFS,"RDF":RDF}
)

for r in g.query(q2):
  print("SPARQL: ",r)

for t in g.triples((None,RDF.type,ns.Person)):
  print("RDFLib:",t)
"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**"""

q3 = prepareQuery('''
    select 
        ?Subject ?Properties
    where{
        {?Subject ?Properties <http://somewhere#Person>}

    }
''',
initNs={"RDFS": RDFS}
)

for r in g.query(q3):
    print("SPARQL: ", r)

for t in g.triples((None,None,ns.Person)):
  print("RDFLib:",t)